name: libipcon_main
run-name: Build & Unit Test
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  build-libipcon:
    runs-on: ubuntu-latest
    steps:
      - name: Add dependent packages
        run: |
          sudo apt update
          sudo apt install libnl-genl-3-dev
          sudo apt install cmocka-doc libcmocka-dev libcmocka0
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build libipcon
        run: |
          cd ${{ github.workspace }}
          mkdir build
          cd build

          cmake -DCMAKE_VERBOSE_MAKEFILE=1 -DUNIT_TEST=OFF ..
          make -j 4
      - run: echo "üçè This job's status is ${{ job.status }}."
  test-libipcon:
    runs-on: ubuntu-latest
    steps:
      - name: Add dependent packages
        run: |
          sudo apt update
          sudo apt install libnl-genl-3-dev
          sudo apt install cmocka-doc libcmocka-dev libcmocka0
          sudo apt install lcov
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build libipcon unit tests
        run: |
          cd ${{ github.workspace }}
          git submodule update --init --recursive
          mkdir build
          cd build

          cmake -DCMAKE_VERBOSE_MAKEFILE=1 -DUNIT_TEST=ON -DENABLE_NL_MOCK=ON -DENABLE_COVERAGE=ON ..
          make -j 4
      - name: Run libipcon unit tests
        run: |
          cd ${{ github.workspace }}
          cd build
          ./test/ut_ipcon

      - name: Show Coverage Result
        run: |
          cd ${{ github.workspace }}
          cd build
          COVERAGE_MD="${{ github.workspace }}/coverage.md"

          lcov --capture --directory lib/CMakeFiles/ipcon.dir/ --output-file coverage.info --rc lcov_branch_coverage=1
          echo "## Coverage Summary" > $COVERAGE_MD
          echo '```' >> $COVERAGE_MD
          lcov --remove coverage.info '/usr/include/*' -o coverage.info --rc lcov_branch_coverage=1 | tail -n 4 | tee -a $COVERAGE_MD
          echo '```' >> $COVERAGE_MD

          echo "## Coverage Detail" >> $COVERAGE_MD
          echo '```' >> $COVERAGE_MD
          lcov -l coverage.info --rc lcov_branch_coverage=1 | sed '1d' | tee -a $COVERAGE_MD
          echo '```' >> $COVERAGE_MD

          genhtml coverage.info --output-directory coverage --rc genhtml_branch_coverage=1
          ls -l coverage/

      - name: Post Coverage Data to PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: JoseThen/comment-pr@v1.2.0
        with:
          file_path: "./coverage.md"
          GITHUB_TOKEN: ${{secrets.GIT_HUB_ACTION}}

      - name: Post Coverage Data to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./build/coverage/
          overwrite: true

      - run: echo "üçè This job's status is ${{ job.status }}."
